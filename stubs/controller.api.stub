<?php declare(strict_types=1);

namespace APP\Http\Controllers;

use APP\Attributes\Summary;
use APP\Attributes\Param;
use APP\Attributes\Response;
use APP\Models\{{modelName}};

class {{className}} extends \ACE\Control
{
    #[Summary('List all {{tableName}}')]
    #[Response(200, 'A list of {{tableName}}.')]
    public function getIndex(): array
    {
        return {{modelName}}::getAll();
    }

    #[Summary('Create a new {{variableName}}')]
    #[Response(201, 'The created {{variableName}}.')]
    public function postStore(): array
    {
        // In a real app, you would get data from the request body.
        $data = ['name' => 'New {{variableName}}', 'description' => '...'];
        {{modelName}}::create($data);
        return $data;
    }

    #[Summary('Get a single {{variableName}}')]
    #[Param('id', 'integer', 'path', true, 'The ID of the {{variableName}}.')]
    #[Response(200, 'The requested {{variableName}}.')]
    #[Response(404, '{{modelName}} not found.')]
    public function getShow(int $id): ?array
    {
        $resource = {{modelName}}::find($id);
        if (!$resource) {
            http_response_code(404);
            return ['error' => '{{modelName}} not found'];
        }
        return $resource;
    }

    #[Summary('Update a {{variableName}}')]
    #[Param('id', 'integer', 'path', true, 'The ID of the {{variableName}} to update.')]
    #[Response(200, '{{modelName}} updated successfully.')]
    #[Response(404, '{{modelName}} not found.')]
    public function putUpdate(int $id): array
    {
        // In a real app, you would get data from the request body.
        $data = ['name' => 'Updated {{variableName}}'];
        $affectedRows = {{modelName}}::update($id, $data);

        if ($affectedRows === 0) {
            http_response_code(404);
            return ['error' => '{{modelName}} not found or no changes made'];
        }
        return ['message' => '{{modelName}} updated'];
    }

    #[Summary('Delete a {{variableName}}')]
    #[Param('id', 'integer', 'path', true, 'The ID of the {{variableName}} to delete.')]
    #[Response(204, '{{modelName}} deleted successfully.')]
    #[Response(404, '{{modelName}} not found.')]
    public function deleteDestroy(int $id): ?array
    {
        $affectedRows = {{modelName}}::delete($id);
        if ($affectedRows === 0) {
            http_response_code(404);
            return ['error' => '{{modelName}} not found'];
        }
        return null;
    }
}